// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// generateThresholds
void generateThresholds(IntegerMatrix gene_interaction, NumericVector threshold_gene, Rcpp::List simulationData);
RcppExport SEXP _GeneVyuha_generateThresholds(SEXP gene_interactionSEXP, SEXP threshold_geneSEXP, SEXP simulationDataSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type gene_interaction(gene_interactionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type threshold_gene(threshold_geneSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type simulationData(simulationDataSEXP);
    generateThresholds(gene_interaction, threshold_gene, simulationData);
    return R_NilValue;
END_RCPP
}
// simulate_GRN
int simulate_GRN(IntegerMatrix gene_interaction, NumericVector threshold_gene, double g_min, double g_max, double k_min, double k_max, int possible_interactions, long model_count_max, long threshold_max, double h, double lambda_min, double lambda_max, int n_min, int n_max, double tot_time, double standard_deviation_factor, int number_gene, double D_max, double D_shot_scaling, int GENE_NOISE_SCALING, int D_levels, double D_scaling, int output_precision, int ANNEALING, int INITIAL_CONDITIONS, String filename, bool parameters_file, bool readIC, bool timeSeries);
RcppExport SEXP _GeneVyuha_simulate_GRN(SEXP gene_interactionSEXP, SEXP threshold_geneSEXP, SEXP g_minSEXP, SEXP g_maxSEXP, SEXP k_minSEXP, SEXP k_maxSEXP, SEXP possible_interactionsSEXP, SEXP model_count_maxSEXP, SEXP threshold_maxSEXP, SEXP hSEXP, SEXP lambda_minSEXP, SEXP lambda_maxSEXP, SEXP n_minSEXP, SEXP n_maxSEXP, SEXP tot_timeSEXP, SEXP standard_deviation_factorSEXP, SEXP number_geneSEXP, SEXP D_maxSEXP, SEXP D_shot_scalingSEXP, SEXP GENE_NOISE_SCALINGSEXP, SEXP D_levelsSEXP, SEXP D_scalingSEXP, SEXP output_precisionSEXP, SEXP ANNEALINGSEXP, SEXP INITIAL_CONDITIONSSEXP, SEXP filenameSEXP, SEXP parameters_fileSEXP, SEXP readICSEXP, SEXP timeSeriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type gene_interaction(gene_interactionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type threshold_gene(threshold_geneSEXP);
    Rcpp::traits::input_parameter< double >::type g_min(g_minSEXP);
    Rcpp::traits::input_parameter< double >::type g_max(g_maxSEXP);
    Rcpp::traits::input_parameter< double >::type k_min(k_minSEXP);
    Rcpp::traits::input_parameter< double >::type k_max(k_maxSEXP);
    Rcpp::traits::input_parameter< int >::type possible_interactions(possible_interactionsSEXP);
    Rcpp::traits::input_parameter< long >::type model_count_max(model_count_maxSEXP);
    Rcpp::traits::input_parameter< long >::type threshold_max(threshold_maxSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_min(lambda_minSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_max(lambda_maxSEXP);
    Rcpp::traits::input_parameter< int >::type n_min(n_minSEXP);
    Rcpp::traits::input_parameter< int >::type n_max(n_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tot_time(tot_timeSEXP);
    Rcpp::traits::input_parameter< double >::type standard_deviation_factor(standard_deviation_factorSEXP);
    Rcpp::traits::input_parameter< int >::type number_gene(number_geneSEXP);
    Rcpp::traits::input_parameter< double >::type D_max(D_maxSEXP);
    Rcpp::traits::input_parameter< double >::type D_shot_scaling(D_shot_scalingSEXP);
    Rcpp::traits::input_parameter< int >::type GENE_NOISE_SCALING(GENE_NOISE_SCALINGSEXP);
    Rcpp::traits::input_parameter< int >::type D_levels(D_levelsSEXP);
    Rcpp::traits::input_parameter< double >::type D_scaling(D_scalingSEXP);
    Rcpp::traits::input_parameter< int >::type output_precision(output_precisionSEXP);
    Rcpp::traits::input_parameter< int >::type ANNEALING(ANNEALINGSEXP);
    Rcpp::traits::input_parameter< int >::type INITIAL_CONDITIONS(INITIAL_CONDITIONSSEXP);
    Rcpp::traits::input_parameter< String >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< bool >::type parameters_file(parameters_fileSEXP);
    Rcpp::traits::input_parameter< bool >::type readIC(readICSEXP);
    Rcpp::traits::input_parameter< bool >::type timeSeries(timeSeriesSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_GRN(gene_interaction, threshold_gene, g_min, g_max, k_min, k_max, possible_interactions, model_count_max, threshold_max, h, lambda_min, lambda_max, n_min, n_max, tot_time, standard_deviation_factor, number_gene, D_max, D_shot_scaling, GENE_NOISE_SCALING, D_levels, D_scaling, output_precision, ANNEALING, INITIAL_CONDITIONS, filename, parameters_file, readIC, timeSeries));
    return rcpp_result_gen;
END_RCPP
}
// selectIc
void selectIc(const IntegerMatrix& gene_interaction, const size_t& nIc, const size_t& model_count_max, const size_t& outputPrecision, std::string fileName);
RcppExport SEXP _GeneVyuha_selectIc(SEXP gene_interactionSEXP, SEXP nIcSEXP, SEXP model_count_maxSEXP, SEXP outputPrecisionSEXP, SEXP fileNameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type gene_interaction(gene_interactionSEXP);
    Rcpp::traits::input_parameter< const size_t& >::type nIc(nIcSEXP);
    Rcpp::traits::input_parameter< const size_t& >::type model_count_max(model_count_maxSEXP);
    Rcpp::traits::input_parameter< const size_t& >::type outputPrecision(outputPrecisionSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileName(fileNameSEXP);
    selectIc(gene_interaction, nIc, model_count_max, outputPrecision, fileName);
    return R_NilValue;
END_RCPP
}
// simulateNetwork
void simulateNetwork(const IntegerMatrix gene_interaction, Rcpp::List simulationData, String tmpFileName, const bool genThresh, const bool genModelParams, const bool genIc, const bool integrate, const bool timeSeries, const bool annealing);
RcppExport SEXP _GeneVyuha_simulateNetwork(SEXP gene_interactionSEXP, SEXP simulationDataSEXP, SEXP tmpFileNameSEXP, SEXP genThreshSEXP, SEXP genModelParamsSEXP, SEXP genIcSEXP, SEXP integrateSEXP, SEXP timeSeriesSEXP, SEXP annealingSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerMatrix >::type gene_interaction(gene_interactionSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type simulationData(simulationDataSEXP);
    Rcpp::traits::input_parameter< String >::type tmpFileName(tmpFileNameSEXP);
    Rcpp::traits::input_parameter< const bool >::type genThresh(genThreshSEXP);
    Rcpp::traits::input_parameter< const bool >::type genModelParams(genModelParamsSEXP);
    Rcpp::traits::input_parameter< const bool >::type genIc(genIcSEXP);
    Rcpp::traits::input_parameter< const bool >::type integrate(integrateSEXP);
    Rcpp::traits::input_parameter< const bool >::type timeSeries(timeSeriesSEXP);
    Rcpp::traits::input_parameter< const bool >::type annealing(annealingSEXP);
    simulateNetwork(gene_interaction, simulationData, tmpFileName, genThresh, genModelParams, genIc, integrate, timeSeries, annealing);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GeneVyuha_generateThresholds", (DL_FUNC) &_GeneVyuha_generateThresholds, 3},
    {"_GeneVyuha_simulate_GRN", (DL_FUNC) &_GeneVyuha_simulate_GRN, 29},
    {"_GeneVyuha_selectIc", (DL_FUNC) &_GeneVyuha_selectIc, 5},
    {"_GeneVyuha_simulateNetwork", (DL_FUNC) &_GeneVyuha_simulateNetwork, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_GeneVyuha(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
